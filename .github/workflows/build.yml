name: OpencvBuild CI With Linux

on:
  push:
    branches: ['master', 'fork/@u4_opencv-build']

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        node-version: [14]
        # os: [ubuntu-latest, windows-2019, macos-latest]
        os: [windows-2019]

    runs-on: ${{ matrix.os }}

    env:
      # 配置github token （这个无需去github配置，默认存在的）
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Git Source
        uses: actions/checkout@v3

      # - name: Windows Setup MSBuild
      #   uses: microsoft/setup-msbuild@v1.0.2
      #   if: ${{ matrix.os }} == 'windows-2019'

      - name: Work with NodejS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache
        uses: actions/cache@v3
        with:
          path: build/stage
          key: node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        run: npm install --ignore-scripts

      - name: Build Dist
        run: npm run prepublishOnly

      - name: Build
        run: npm run install

      - name: Generate Package
        run: npm run package

      # 上传Release Asset
      - name: 上传Release Asset
        id: upload-release-asset
        uses: alexellis/upload-assets@0.2.2
        with:
          # 上传URL为建立GitHub Release步骤的输出值，可经过配置的id获取
          # upload_url: ${{ steps.create_release.outputs.upload_url }}
          # 上传文件信息
          asset_paths: '["./build/stage/*/*"]'


  release:
    runs-on: ubuntu-latest
    env:
      # 配置github token （这个无需去github配置，默认存在的）
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Git Source
        uses: actions/checkout@v3

      # 读取当前版本号
      - name: 读取当前版本号
        id: version
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          # 读取dist/package.json的，而不是根路径下的package.json
          path: ./package.json
          property: version

      - name: 建立GitHub Release
        id: create_release
        uses: actions/create-release@latest
        with:
          # 标签名
          tag_name: v${{steps.version.outputs.value}}
          # release名
          release_name: v${{steps.version.outputs.value}}
          # 是否为草稿
          draft: false
          # 是否为预发布
          prerelease: false