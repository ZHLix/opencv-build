name: OpencvBuild CI

on:
  push:
    branches: ['master', 'fork/@u4_opencv-build']

jobs:
  release:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.value }}

    steps:
      - name: Checkout Git Source
        uses: actions/checkout@v3

      # 读取当前版本号
      - name: 读取当前版本号
        id: version
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          # 读取dist/package.json的，而不是根路径下的package.json
          path: ./package.json
          property: version

      - name: 建立GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          # 配置github token （这个无需去github配置，默认存在的）
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # 上传URL为建立GitHub Release步骤的输出值，可经过配置的id获取
          # upload_url: ${{ steps.create_release.outputs.upload_url }}
          # 上传文件信息
          tag_name: v${{ needs.release.outputs.version }}

  build:
    strategy:
      fail-fast: false
      matrix:
        node-version: [14]
        os: [ubuntu-latest, windows-2019, macos-latest]

    runs-on: ${{ matrix.os }}
    needs: release

    steps:
      # 检出仓库
      - name: Checkout Git Source
        uses: actions/checkout@v3

      # windows msBuild 相关
      - name: Windows Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
        if: matrix.os == 'windows-2019'
        with:
          msbuild-architecture: x64

      # 添加 NodeJs 环境
      - name: Work with NodejS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # 安装依赖
      - name: Install Dependencies
        run: npm install --ignore-scripts

      # 构建
      - name: Build
        run: npm run install

      # 生成发布包
      - name: Generate Package
        run: npm run package

      # 上传Release Asset
      - name: 上传Release Asset
        id: upload-release-asset
        uses: softprops/action-gh-release@v1
        env:
          # 配置github token （这个无需去github配置，默认存在的）
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # 上传文件信息
          tag_name: v${{ needs.release.outputs.version }}
          files: build/stage/*/*
